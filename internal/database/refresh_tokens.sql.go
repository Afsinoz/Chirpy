// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: refresh_tokens.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createRefToken = `-- name: CreateRefToken :one

INSERT INTO refresh_tokens (token, created_at, updated_at, expires_at, revoked_at, user_id) 
VALUES (
    $1,
    NOW(),
    NOW(),
    NOW() + interval '60 days',
    NULL,
    $2
)
RETURNING token, created_at, updated_at, expires_at, revoked_at, user_id
`

type CreateRefTokenParams struct {
	Token  string
	UserID uuid.NullUUID
}

func (q *Queries) CreateRefToken(ctx context.Context, arg CreateRefTokenParams) (RefreshToken, error) {
	row := q.db.QueryRowContext(ctx, createRefToken, arg.Token, arg.UserID)
	var i RefreshToken
	err := row.Scan(
		&i.Token,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ExpiresAt,
		&i.RevokedAt,
		&i.UserID,
	)
	return i, err
}
